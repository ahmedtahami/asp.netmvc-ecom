@model Oxygen_Atom.Entities.Product
@{
    ViewBag.Title = "Edit";
}
<div class="container">
    @using (Html.BeginForm("Edit", "Product", FormMethod.Post, new
    { enctype = "multipart/form-data" }))


    {
        @Html.AntiForgeryToken()

        <h4>Edit Product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        <div class="row">
            <div class="col-6 col-md-12">
                <div class="form-group col-6">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-6">
                    @Html.LabelFor(model => model.Category.Name, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.DropDownList("CategoryId", null, "- Select Category -", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Category.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-6">
                    @Html.LabelFor(model => model.SubCategory.Name, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.DropDownList("SubCategoryId", null, "- Select SubCategory -", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SubCategory.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-6">
                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", type = "number" } })
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                    </div>
                </div>
                @*<div class="form-group col-6">
                        @Html.LabelFor(model => model.Product.Stock, htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.EditorFor(model => model.Product.Stock, new { htmlAttributes = new { @class = "form-control", type = "number" } })
                            @Html.ValidationMessageFor(model => model.Product.Stock, "", new { @class = "text-danger" })
                        </div>
                    </div>*@
                <div class="form-group col-6">
                    @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-6">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-6">
                    @Html.LabelFor(model => model.IsFeatured, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.CheckBoxFor(model => model.IsFeatured, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.IsFeatured, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-6">
                    @Html.LabelFor(model => model.ProductImage1, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.TextBoxFor(model => model.ProductImage1, new { type = "file", htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductImage1, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-6">
                    @Html.LabelFor(model => model.ProductImage2, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.TextBoxFor(model => model.ProductImage2, new { type = "file", htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductImage2, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-6">
                    @Html.LabelFor(model => model.ProductImage3, htmlAttributes: new { @class = "control-label" })
                    <div>
                        @Html.TextBoxFor(model => model.ProductImage3, new { type = "file", htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductImage3, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>

            </div>
        </div>
    }
</div>
<script type="text/javascript">
    function addSizes() {
        //e.preventDefault();  // this is how to stop the form submitting
        var val1 = $('#Sizes').val();
        var sizeName = $("#Sizes option:selected").text();// us an id selector - it is much better performance
        var val2 = $('#Quantity').val();  // us an id selector - it is much better performance
        if (val1 != '' && val2 != '') { // check if textbox was empty (not sure what your loop did)
            $('#dataTable').append('<tbody><tr><td style="display:none;" name="ProductSize.SizeId">' + val1 + '</td><td>' + sizeName + '</td><td name="ProductSize.Quantity">' + val2 + '</td></tr></tbody>');  //apend new row to table

        }
    }
    //$('#addSize').click(function (e) {
    //    e.preventDefault();  // this is how to stop the form submitting
    //    var val1 = $('#psize').val();  // us an id selector - it is much better performance
    //    var val2 = $('#psize-qty').val();  // us an id selector - it is much better performance
    //    if (val1 != '' && val2!='') { // check if textbox was empty (not sure what your loop did)
    //        $('#dataTable').append('<tbody><tr><td>' + val1 + '</td></tr></tbody>');  //apend new row to table
    //        $('#dataTable').append('<tbody><tr><td>' + val2 + '</td></tr></tbody>');  //apend new row to table
    //    }
    //});
</script>